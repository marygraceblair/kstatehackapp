using Toybox.WatchUi as Ui;
using Toybox.Graphics as Gfx;
using Toybox.System as Sys;
using Toybox.Lang as Lang;
using Toybox.Time as Time;
using Toybox.Time.Gregorian as Calendar;


class Time_Piece_CareView extends Ui.View {

    function initialize() {
        View.initialize();
    }

    //! Load your resources here
    function onLayout(dc) {
        setLayout(Rez.Layouts.MainLayout(dc));
    }

    //! Called when this View is brought to the foreground. Restore
    //! the state of this View and prepare it to be shown. This includes
    //! loading resources into memory.
    function onShow() {
    }

    //! Update the view
    function onUpdate(dc) {
    	var clockTime = Sys.getClockTime();
        var timeString = Lang.format("$1$:$2$", [clockTime.hour, clockTime.min.format("%02d")]);
        var view = View.findDrawableById("TimeLabel");
         view.setText(timeString);
         
        var now = Time.now();
        var info = Calendar.info(now, Time.FORMAT_LONG);


        var dateStr = Lang.format("$1$ $2$ $3$", [info.day_of_week, info.month, info.day]);
         
         var dateView = View.findDrawableById("DateLabel"); 
         dateView.setText(dateStr); 
         
         var diabeticView = View.findDrawableById("DiabeticLabel"); 
         var allergiesView = View.findDrawableById("Allergies"); 
         var bloodTypeView = View.findDrawableById("BloodType");
         var phoneView = View.findDrawableById("PhoneLabel"); 
         
         //diabeticView.setText("@Strings.diabetic"); 
         allergiesView.setText( "@Strings.allergies"); 
      	 phoneView.setText("@Strings.emergencyPhone");
         
         bloodTypeView.setText("@Strings.bloodType"); 
         
        // Call the parent onUpdate function to redraw the layout
        View.onUpdate(dc);
    }

    //! Called when this View is removed from the screen. Save the
    //! state of this View here. This includes freeing resources from
    //! memory.
    function onHide() {
    }
    
    
    

}
